{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/utils/index.ts"],"names":[],"mappings":"AAAA,cAAc,YAAY,CAAC;AAC3B,cAAc,eAAe,CAAC;AAC9B,cAAc,iBAAiB,CAAC;AAChC,cAAc,qBAAqB,CAAC;AAEpC,MAAM,UAAU,gBAAgB,CAAI,GAAY;IAC9C,IAAI,GAAG,KAAK,SAAS,EAAE;QACrB,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;KACpE;AACH,CAAC;AAED,MAAM,UAAU,QAAQ,CAAI,GAAG,IAA6B;IAC1D,OAAO,CAAC,MAAgB,EAAE,EAAE;QAC1B,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;YACtB,IAAI,OAAO,GAAG,KAAK,UAAU,EAAE;gBAC7B,GAAG,CAAC,MAAM,CAAC,CAAC;aACb;iBAAM,IAAI,GAAG,KAAK,IAAI,EAAE;gBACvB,kEAAkE;gBAClE,mBAAmB;gBACnB,GAAG,CAAC,OAAO,GAAG,MAAM,CAAC;aACtB;SACF;IACH,CAAC,CAAC;AACJ,CAAC","sourcesContent":["export * from './domUtils';\nexport * from './columnUtils';\nexport * from './keyboardUtils';\nexport * from './selectedCellUtils';\n\nexport function assertIsValidKey<R>(key: unknown): asserts key is keyof R {\n  if (key === undefined) {\n    throw new Error('Please specify the rowKey prop to use selection');\n  }\n}\n\nexport function wrapRefs<T>(...refs: readonly React.Ref<T>[]) {\n  return (handle: T | null) => {\n    for (const ref of refs) {\n      if (typeof ref === 'function') {\n        ref(handle);\n      } else if (ref !== null) {\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/31065\n        // @ts-expect-error\n        ref.current = handle;\n      }\n    }\n  };\n}\n"]}