{"version":3,"file":"SelectCellFormatter.js","sourceRoot":"","sources":["../../src/formatters/SelectCellFormatter.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,eAAe,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AACvD,OAAO,IAAI,MAAM,MAAM,CAAC;AAexB,MAAM,UAAU,mBAAmB,CAAC,EAClC,KAAK,EACL,QAAQ,EACR,cAAc,EACd,QAAQ,EACR,QAAQ,EACR,YAAY,EAAE,SAAS,EACvB,iBAAiB,EAAE,cAAc,EACR;IACzB,MAAM,QAAQ,GAAG,MAAM,CAAmB,IAAI,CAAC,CAAC;IAEhD,eAAe,CAAC,GAAG,EAAE;;QACnB,IAAI,CAAC,cAAc;YAAE,OAAO;QAC5B,MAAA,QAAQ,CAAC,OAAO,0CAAE,KAAK,GAAG;IAC5B,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC;IAErB,SAAS,YAAY,CAAC,CAAsC;QAC1D,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,EAAG,CAAC,CAAC,WAA0B,CAAC,QAAQ,CAAC,CAAC;IACrE,CAAC;IAED,OAAO,CACL,+BAAO,SAAS,EAAE,IAAI,CAAC,oBAAoB,EAAE,EAAE,6BAA6B,EAAE,QAAQ,EAAE,CAAC;QACvF,6CACc,SAAS,qBACJ,cAAc,EAC/B,QAAQ,EAAE,QAAQ,EAClB,GAAG,EAAE,QAAQ,EACb,IAAI,EAAC,UAAU,EACf,SAAS,EAAC,oBAAoB,EAC9B,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,YAAY,EACtB,OAAO,EAAE,KAAK,GACd;QACF,6BAAK,SAAS,EAAC,cAAc,GAAG,CAC1B,CACT,CAAC;AACJ,CAAC","sourcesContent":["import React, { useLayoutEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\ntype SharedInputProps = Pick<React.InputHTMLAttributes<HTMLInputElement>,\n  | 'disabled'\n  | 'tabIndex'\n  | 'aria-label'\n  | 'aria-labelledby'\n>;\n\nexport interface SelectCellFormatterProps extends SharedInputProps {\n  isCellSelected?: boolean;\n  value: boolean;\n  onChange: (value: boolean, isShiftClick: boolean) => void;\n}\n\nexport function SelectCellFormatter({\n  value,\n  tabIndex,\n  isCellSelected,\n  disabled,\n  onChange,\n  'aria-label': ariaLabel,\n  'aria-labelledby': ariaLabelledBy\n}: SelectCellFormatterProps) {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useLayoutEffect(() => {\n    if (!isCellSelected) return;\n    inputRef.current?.focus();\n  }, [isCellSelected]);\n\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n    onChange(e.target.checked, (e.nativeEvent as MouseEvent).shiftKey);\n  }\n\n  return (\n    <label className={clsx('rdg-checkbox-label', { 'rdg-checkbox-label-disabled': disabled })}>\n      <input\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelledBy}\n        tabIndex={tabIndex}\n        ref={inputRef}\n        type=\"checkbox\"\n        className=\"rdg-checkbox-input\"\n        disabled={disabled}\n        onChange={handleChange}\n        checked={value}\n      />\n      <div className=\"rdg-checkbox\" />\n    </label>\n  );\n}\n"]}